---
- hosts: all
  tasks:

    - name: Update
      become: yes
      apt:
        update_cache: yes
    - name: Upgrade
      become: yes
      apt:
        upgrade: yes

    - name: Adding JAVA 8 repo
      become: yes
      apt_repository: repo='ppa:webupd8team/java'

    - name: Agrreing to Oracle License
      become: yes
      debconf: name=oracle-java8-installer question=shared/accepted-oracle-license-v1-1 vtype=select value=true

    - name: Installing Jav 8
      become: yes
      apt:
        name: oracle-java8-installer
        force: yes

    - name: Adding jenkins key
      become: yes
      apt_key:
        url: https://pkg.jenkins.io/debian/jenkins-ci.org.key
        state: present
    - name: add deb file in sources list
      become: yes
      blockinfile:
        path: /etc/apt/sources.list.d/jenkins.list
        block:
          deb http://pkg.jenkins.io/debian-stable binary/
        create: yes

    - name: Update repositories cache and install "jenkins ansible maven2 vagrant" package
      become: yes
      apt:
        update_cache: yes
        name: "{{item}}"
        state: present
      with_items:
        - jenkins
        - python-pip
        - git
        - nodejs
        - npm
        - python-dev
        - libxslt-dev
        - libxml2-dev
        - python-lxml
        - maven
        - vagrant
  
    - name: Add Oracle VirtualBox official repository to sources.list
      become: yes
      blockinfile:
        path: /etc/apt/sources.list
        block: deb http://download.virtualbox.org/virtualbox/debian {{ ansible_distribution_release }} contrib

    - name: downloading the key and adding it to key-ring for secure apt
      become: yes
      apt_key:
        url: "https://www.virtualbox.org/download/oracle_vbox_2016.asc"
        state: present

    - name: update sfw sources and install VBox-5.0
      become: yes
      apt:
        update_cache: yes
        name: virtualbox-5.0
        state: present
        force: yes
    

    - name: copying checkbox yml files to jenkins server 
      become: yes
      copy:
        src: /home/vagrant/DevOpsProject/MS1-ConfigurationManagement/checkbox.io
        dest: /home/vagrant/
        owner: vagrant
    - name: copying itrust yml files to jenkins server 
      become: yes
      copy:
        src: /home/vagrant/DevOpsProject/MS1-ConfigurationManagement/iTrust
        dest: /home/vagrant/
        owner: vagrant
    - name: Add Ansible repo
      become: yes
      command: apt-add-repository ppa:ansible/ansible

    - name: Updating
      become: yes
      apt:
        update_cache: yes

    - name: Installing Ansible
      become: yes
      apt: pkg=ansible state=present update_cache=yes

    - name: Change ansible config
      become: yes
      lineinfile:
        path: /etc/ansible/ansible.cfg
        line: host_key_checking = False
        state: present

    - name: Disabling jenkins setup wizard
      become: yes
      lineinfile:
        path: /etc/default/jenkins
        regexp: JAVA_ARGS="-Djava.awt.headless=true"
        line: JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"
        state: present

    - pause:
        seconds: 20

    - name: Editing jenkins' config file to disable security
      become: yes
      lineinfile:
        path: /var/lib/jenkins/config.xml
        regexp: "useSecurity>true</useSecurity>"
        line:   "<useSecurity>false</useSecurity>"
        state: present

    - pip:
        name: "{{item}}"
      with_items:
        - urllib3
        - pyOpenSSL
        - ndg-httpsclient
        - pyasn1
        - python-jenkins
      become: yes


    - name: Editing the sudoers file
      become: yes
      lineinfile:
        path: /etc/sudoers
        line: "jenkins ALL=(ALL) NOPASSWD: ALL"
        state: present	
    
    - name: service start
      become: yes
      service:
        name: jenkins
        state: restarted

    - pause:
        seconds: 20

    - name: installing jenkins plugins
      become: yes
      vars:
        my_jenkins_params:
          username: username
          password: password
          url: http://localhost:8080
          validate_certs: False
      jenkins_plugin:
        name: "{{item}}"
        state: present
        with_dependencies: yes
      with_items:
       - git
       - ansible
       - postbuild-task
       
    - name: service start
      become: yes
      service:
        name: jenkins
        state: restarted

    - name: Wait for Jenkins to start up
      uri:
        url: http://localhost:8080
        status_code: 200
        timeout: 5
      register: jenkins_service_status
      # Keep trying for 5 mins in 5 sec intervals
      retries: 60
      delay: 5
      until: >
         'status' in jenkins_service_status and
         jenkins_service_status['status'] == 200
    
    - name: script for adding credentials
      set_fact:
        script: |
          import com.cloudbees.plugins.credentials.impl.*;
          import com.cloudbees.plugins.credentials.*;
          import com.cloudbees.plugins.credentials.domains.*;

          Credentials c = (Credentials) new UsernamePasswordCredentialsImpl(CredentialsScope.GLOBAL,"a77a7a23-bafd-4fee-a1f3-85b9a2154b46", "description", "unityid", "password")

          SystemCredentialsProvider.getInstance().getStore().addCredentials(Domain.global(), c)

    - name: adding credentials
      jenkins_script:
        script: "{{script}}"
        url: http://localhost:8080
        user: admin
        password: admin
        validate_certs: no

    - name: creating jenkins job for checkbox io
      jenkins_job:
        config: "{{ lookup('file', 'checkboxio_job.xml') }}"
        name: checkboxio_job
        url: http://localhost:8080
    - name: creating jenkins job for checkbox io
      jenkins_job:
        config: "{{ lookup('file', 'iTrust_job.xml') }}"
        name: iTrust_job
        url: http://localhost:8080

#    - name: Copying jenkins_cli.jar file
#      become: yes
#      command: cp /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar /home/vagrant/jenkins-cli.jar

#    - name: Building checkboxio jenkins job
#      become: yes
#      command: java -jar jenkins-cli.jar -s http://192.168.33.100:8080/ build checkboxio_job

